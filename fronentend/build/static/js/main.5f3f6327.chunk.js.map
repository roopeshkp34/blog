{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","compleated","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","window","confirm","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f3f6327.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n      this.state={\n        todoList:[],\n        activeItem:{\n          id:null,\n          title:'',\n          compleated:false,\n        },\n        editing:false,\n      }\n      this.fetchTasks=this.fetchTasks.bind(this)\n      this.handleChange=this.handleChange.bind(this)\n      this.handleSubmit=this.handleSubmit.bind(this)\n      this.getCookie=this.getCookie.bind(this)\n      this.startEdit=this.startEdit.bind(this)\n      this.deleteItem=this.deleteItem.bind(this)\n      this.strikeUnstrike=this.strikeUnstrike.bind(this)\n\n\n\n\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  componentWillMount() {\n    this.fetchTasks()\n\n  }\n  fetchTasks(){\n    console.log(\"fetching....\");\n    fetch(\"http://127.0.0.1:8000/api/tasks\")\n    .then(response=>response.json())\n    .then(data=>\n      this.setState({\n        todoList:data\n      })\n      )\n  }\n  handleChange(e){\n    var name=e.target.name;\n    var value=e.target.value;\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    console.log('item,',this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n    var url=\"http://127.0.0.1:8000/api/create\"\n    if(this.state.editing===true){\n      url=`http://127.0.0.1:8000/api/update/${ this.state.activeItem.id }/`\n      this.setState({\n        editing:false\n      })\n    }\n    fetch(url,{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then((response) =>{\n      this.fetchTasks()\n      this.setState({\n        activeItem:{\n          id:null,\n          title:'',\n          compleated:false,\n        }\n      })\n      }).catch(function(error){\n        console.log(\"error\",error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem:task,\n      editing:true\n    })\n  }\n\n  deleteItem(task){\n    var csrftoken = this.getCookie('csrftoken')\n    if(window.confirm(\"Are You sure , You want to delete\")){\n      fetch(`http://127.0.0.1:8000/api/delete/${task.id}/`,{\n        method:'DELETE',\n        headers:{\n          'Content-type':'application/json',\n          'X-CSRFToken':csrftoken,\n        }\n      }).then((response)=>{\n        this.fetchTasks()\n      })\n    }\n  }\n\n  strikeUnstrike(task){\n    task.compleated = !task.compleated\n    var csrftoken = this.getCookie('csrftoken')\n    var url=`http://127.0.0.1:8000/api/update/${ task.id }/`\n    console.log(task.compleated);\n    fetch(url,{\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify({'compleated':task.compleated,'title':task.title })\n    }).then(()=> {\n      this.fetchTasks();\n    })\n  }\n\n  render() {\n    var tasks=this.state.todoList\n    var self=this\n    return(\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex:6}}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task...\"/>\n                </div>\n                <div style={{ flex:1}}>\n                  <input className=\"btn btn-warning\" id=\"submit\" type=\"submit\" name=\"Add\"/>\n                </div>\n                \n              </div>\n            </form>\n\n          </div>\n          <div id=\"list-wrapper\">\n            {tasks.map(function(task,index){\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={()=>self.strikeUnstrike(task)} style={{ flex:7}}>\n                    {task.compleated==false ? (\n                      <span>{task.title}</span>\n                    ): (\n                      <strike>{task.title}</strike>\n                    )}\n                    \n                  </div>\n                  <div style={{ flex:1}}>\n                    <button onClick={()=>self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n                  <div style={{ flex:1}}>\n                    <button onClick={()=>self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                  </div>\n                </div>\n              )\n            })}\n\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}